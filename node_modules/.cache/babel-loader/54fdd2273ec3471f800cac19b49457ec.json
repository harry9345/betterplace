{"ast":null,"code":"// Challenge 1 solution\nconst friends = [{\n  name: \"sam\",\n  score: 20,\n  isMeet: false\n}, {\n  name: \"john\",\n  score: 100,\n  isMeet: false\n}, {\n  name: \"Jim\",\n  score: 15,\n  isMeet: false\n}, {\n  name: \"ali\",\n  score: 5,\n  isMeet: false\n}];\nexport default function tobiesFriends(n, scores) {\n  // sorthe friends list by thier score DESC\n  n.sort((a, b) => parseFloat(b.score) - parseFloat(a.score));\n  let meetFriend = 0;\n\n  for (let i = 0; i < n.length; i++) {\n    if (n[i].isMeet) {\n      n[i].score = n[n.length - 1].score - 1;\n    } else {\n      n[i].isMeet = true;\n      n[i].score = n[n.length - 1].score - 1;\n      addScore(n, i);\n      meetFriend += i;\n    }\n\n    return meetFriend;\n  }\n\n  function addScore(FriendsList, index) {\n    for (let i = index + 1; i < FriendsList.length; i++) {\n      FriendsList[i].score++;\n    }\n  }\n}\ntobiesFriends(friends, 100);","map":{"version":3,"sources":["/Users/mona/Desktop/Projects/React/userCode/betterplace-fe-test/src/challenge_1.js"],"names":["friends","name","score","isMeet","tobiesFriends","n","scores","sort","a","b","parseFloat","meetFriend","i","length","addScore","FriendsList","index"],"mappings":"AAAA;AACA,MAAMA,OAAO,GAAG,CACd;AACEC,EAAAA,IAAI,EAAE,KADR;AAEEC,EAAAA,KAAK,EAAE,EAFT;AAGEC,EAAAA,MAAM,EAAE;AAHV,CADc,EAMd;AACEF,EAAAA,IAAI,EAAE,MADR;AAEEC,EAAAA,KAAK,EAAE,GAFT;AAGEC,EAAAA,MAAM,EAAE;AAHV,CANc,EAWd;AACEF,EAAAA,IAAI,EAAE,KADR;AAEEC,EAAAA,KAAK,EAAE,EAFT;AAGEC,EAAAA,MAAM,EAAE;AAHV,CAXc,EAgBd;AACEF,EAAAA,IAAI,EAAE,KADR;AAEEC,EAAAA,KAAK,EAAE,CAFT;AAGEC,EAAAA,MAAM,EAAE;AAHV,CAhBc,CAAhB;AAsBA,eAAe,SAASC,aAAT,CAAuBC,CAAvB,EAA0BC,MAA1B,EAAkC;AAC/C;AACAD,EAAAA,CAAC,CAACE,IAAF,CAAO,CAACC,CAAD,EAAIC,CAAJ,KAAUC,UAAU,CAACD,CAAC,CAACP,KAAH,CAAV,GAAsBQ,UAAU,CAACF,CAAC,CAACN,KAAH,CAAjD;AACA,MAAIS,UAAU,GAAG,CAAjB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,CAAC,CAACQ,MAAtB,EAA8BD,CAAC,EAA/B,EAAmC;AACjC,QAAIP,CAAC,CAACO,CAAD,CAAD,CAAKT,MAAT,EAAiB;AACfE,MAAAA,CAAC,CAACO,CAAD,CAAD,CAAKV,KAAL,GAAaG,CAAC,CAACA,CAAC,CAACQ,MAAF,GAAW,CAAZ,CAAD,CAAgBX,KAAhB,GAAwB,CAArC;AACD,KAFD,MAEO;AACLG,MAAAA,CAAC,CAACO,CAAD,CAAD,CAAKT,MAAL,GAAc,IAAd;AACAE,MAAAA,CAAC,CAACO,CAAD,CAAD,CAAKV,KAAL,GAAaG,CAAC,CAACA,CAAC,CAACQ,MAAF,GAAW,CAAZ,CAAD,CAAgBX,KAAhB,GAAwB,CAArC;AACAY,MAAAA,QAAQ,CAACT,CAAD,EAAIO,CAAJ,CAAR;AACAD,MAAAA,UAAU,IAAIC,CAAd;AACD;;AACD,WAAOD,UAAP;AACD;;AACD,WAASG,QAAT,CAAkBC,WAAlB,EAA+BC,KAA/B,EAAsC;AACpC,SAAK,IAAIJ,CAAC,GAAGI,KAAK,GAAG,CAArB,EAAwBJ,CAAC,GAAGG,WAAW,CAACF,MAAxC,EAAgDD,CAAC,EAAjD,EAAqD;AACnDG,MAAAA,WAAW,CAACH,CAAD,CAAX,CAAeV,KAAf;AACD;AACF;AACF;AACDE,aAAa,CAACJ,OAAD,EAAU,GAAV,CAAb","sourcesContent":["// Challenge 1 solution\nconst friends = [\n  {\n    name: \"sam\",\n    score: 20,\n    isMeet: false,\n  },\n  {\n    name: \"john\",\n    score: 100,\n    isMeet: false,\n  },\n  {\n    name: \"Jim\",\n    score: 15,\n    isMeet: false,\n  },\n  {\n    name: \"ali\",\n    score: 5,\n    isMeet: false,\n  },\n];\nexport default function tobiesFriends(n, scores) {\n  // sorthe friends list by thier score DESC\n  n.sort((a, b) => parseFloat(b.score) - parseFloat(a.score));\n  let meetFriend = 0;\n  for (let i = 0; i < n.length; i++) {\n    if (n[i].isMeet) {\n      n[i].score = n[n.length - 1].score - 1;\n    } else {\n      n[i].isMeet = true;\n      n[i].score = n[n.length - 1].score - 1;\n      addScore(n, i);\n      meetFriend += i;\n    }\n    return meetFriend;\n  }\n  function addScore(FriendsList, index) {\n    for (let i = index + 1; i < FriendsList.length; i++) {\n      FriendsList[i].score++;\n    }\n  }\n}\ntobiesFriends(friends, 100);\n"]},"metadata":{},"sourceType":"module"}
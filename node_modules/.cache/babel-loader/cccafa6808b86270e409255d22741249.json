{"ast":null,"code":"var _jsxFileName = \"/Users/mona/Desktop/Projects/React/userCode/betterplace-fe-test/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport PaypalButton from \"./PaypalButton\";\nimport { Formik } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst submitHandler = (_, formik) => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve(formik.setValues({\n        _paypal_token: \"fake_paypal_token\"\n      }), formik.setSubmitting(true));\n    }, 3000);\n    reject(console.log(\"reject\"));\n  });\n}; // const submitHandler = (_, formik) => {\n//   setTimeout(() => {\n//     formik.setValues({ _paypal_token: \"fake_paypal_token\" });\n//     formik.setSubmitting(false);\n//   }, 3000);\n// };\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(Formik, {\n    onSubmit: submitHandler,\n    initialValues: {},\n    children: /*#__PURE__*/_jsxDEV(PaypalButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 28,\n  columnNumber: 3\n}, this), document.getElementById(\"root\")); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["/Users/mona/Desktop/Projects/React/userCode/betterplace-fe-test/src/index.js"],"names":["React","ReactDOM","reportWebVitals","PaypalButton","Formik","submitHandler","_","formik","Promise","resolve","reject","setTimeout","setValues","_paypal_token","setSubmitting","console","log","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,MAAT,QAAuB,QAAvB;;;AAEA,MAAMC,aAAa,GAAG,CAACC,CAAD,EAAIC,MAAJ,KAAe;AACnC,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCC,IAAAA,UAAU,CAAC,MAAM;AACfF,MAAAA,OAAO,CACLF,MAAM,CAACK,SAAP,CAAiB;AAAEC,QAAAA,aAAa,EAAE;AAAjB,OAAjB,CADK,EAELN,MAAM,CAACO,aAAP,CAAqB,IAArB,CAFK,CAAP;AAID,KALS,EAKP,IALO,CAAV;AAMAJ,IAAAA,MAAM,CAACK,OAAO,CAACC,GAAR,CAAY,QAAZ,CAAD,CAAN;AACD,GARM,CAAP;AASD,CAVD,C,CAYA;AACA;AACA;AACA;AACA;AACA;;;AAEAf,QAAQ,CAACgB,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,MAAD;AAAQ,IAAA,QAAQ,EAAEZ,aAAlB;AAAiC,IAAA,aAAa,EAAE,EAAhD;AAAA,2BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAMEa,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF,E,CASA;AACA;AACA;;AACAjB,eAAe","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport PaypalButton from \"./PaypalButton\";\nimport { Formik } from \"formik\";\n\nconst submitHandler = (_, formik) => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve(\n        formik.setValues({ _paypal_token: \"fake_paypal_token\" }),\n        formik.setSubmitting(true)\n      );\n    }, 3000);\n    reject(console.log(\"reject\"));\n  });\n};\n\n// const submitHandler = (_, formik) => {\n//   setTimeout(() => {\n//     formik.setValues({ _paypal_token: \"fake_paypal_token\" });\n//     formik.setSubmitting(false);\n//   }, 3000);\n// };\n\nReactDOM.render(\n  <React.StrictMode>\n    <Formik onSubmit={submitHandler} initialValues={{}}>\n      <PaypalButton />\n    </Formik>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}
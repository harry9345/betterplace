{"ast":null,"code":"var _jsxFileName = \"/Users/mona/Desktop/Projects/React/userCode/betterplace-fe-test/src/PaypalButton.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { connect } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst buttonStyle = {\n  color: \"gold\",\n  fundingicons: false,\n  label: \"checkout\",\n  shape: \"rect\",\n  size: \"responsive\",\n  tagline: false\n};\n\nconst PaypalButton = props => {\n  const createOrderOrBillingAgreement = async () => {\n    await sleepUntilSubmitted();\n    props.formik.submitForm(); // submit will call api with form values and inject _paypal_token into the form values\n\n    if (props.formik.isValid) {\n      props.formik.setSubmitting(true);\n    }\n\n    return props.formik.values._paypal_token;\n  };\n\n  const sleepUntilSubmitted = async () => {\n    const sleep = async ms => new Promise(resolve => {\n      setTimeout(resolve, ms);\n    });\n\n    while (props.formik.isSubmitting) {\n      await sleep(100);\n    }\n  };\n\n  const onApprove = () => {\n    // do something on success\n    console.log(\"on submite form\");\n  };\n\n  const paypal = window[\"paypal\"];\n  if (!paypal) return null;\n  const Button = paypal.Buttons.driver(\"react\", {\n    React,\n    ReactDOM\n  });\n  const {\n    isSubmitting\n  } = props.formik;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: isSubmitting && {\n        display: \"none\"\n      } || {},\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        commit: true,\n        env: \"sandbox\",\n        createBillingAgreement: createOrderOrBillingAgreement,\n        onApprove: onApprove,\n        onCancel: () => props.formik.setSubmitting(false),\n        onError: () => props.formik.setSubmitting(false),\n        style: buttonStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PaypalButton;\nexport default _c2 = connect(PaypalButton);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PaypalButton\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/mona/Desktop/Projects/React/userCode/betterplace-fe-test/src/PaypalButton.js"],"names":["React","ReactDOM","connect","buttonStyle","color","fundingicons","label","shape","size","tagline","PaypalButton","props","createOrderOrBillingAgreement","sleepUntilSubmitted","formik","submitForm","isValid","setSubmitting","values","_paypal_token","sleep","ms","Promise","resolve","setTimeout","isSubmitting","onApprove","console","log","paypal","window","Button","Buttons","driver","display"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,OAAT,QAAwB,QAAxB;;AAEA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,KAAK,EAAE,MADW;AAElBC,EAAAA,YAAY,EAAE,KAFI;AAGlBC,EAAAA,KAAK,EAAE,UAHW;AAIlBC,EAAAA,KAAK,EAAE,MAJW;AAKlBC,EAAAA,IAAI,EAAE,YALY;AAMlBC,EAAAA,OAAO,EAAE;AANS,CAApB;;AASA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAMC,6BAA6B,GAAG,YAAY;AAChD,UAAMC,mBAAmB,EAAzB;AACAF,IAAAA,KAAK,CAACG,MAAN,CAAaC,UAAb,GAFgD,CAErB;;AAC3B,QAAIJ,KAAK,CAACG,MAAN,CAAaE,OAAjB,EAA0B;AACxBL,MAAAA,KAAK,CAACG,MAAN,CAAaG,aAAb,CAA2B,IAA3B;AACD;;AACD,WAAON,KAAK,CAACG,MAAN,CAAaI,MAAb,CAAoBC,aAA3B;AACD,GAPD;;AASA,QAAMN,mBAAmB,GAAG,YAAY;AACtC,UAAMO,KAAK,GAAG,MAAOC,EAAP,IACZ,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AACvBC,MAAAA,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAV;AACD,KAFD,CADF;;AAKA,WAAOV,KAAK,CAACG,MAAN,CAAaW,YAApB,EAAkC;AAChC,YAAML,KAAK,CAAC,GAAD,CAAX;AACD;AACF,GATD;;AAWA,QAAMM,SAAS,GAAG,MAAM;AACtB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACD,GAHD;;AAKA,QAAMC,MAAM,GAAGC,MAAM,CAAC,QAAD,CAArB;AACA,MAAI,CAACD,MAAL,EAAa,OAAO,IAAP;AAEb,QAAME,MAAM,GAAGF,MAAM,CAACG,OAAP,CAAeC,MAAf,CAAsB,OAAtB,EAA+B;AAAEjC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAA/B,CAAf;AACA,QAAM;AAAEwB,IAAAA;AAAF,MAAmBd,KAAK,CAACG,MAA/B;AAEA,sBACE;AAAA,2BACE;AAAK,MAAA,KAAK,EAAGW,YAAY,IAAI;AAAES,QAAAA,OAAO,EAAE;AAAX,OAAjB,IAAyC,EAArD;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,MAAM,MADR;AAEE,QAAA,GAAG,EAAC,SAFN;AAGE,QAAA,sBAAsB,EAAEtB,6BAH1B;AAIE,QAAA,SAAS,EAAEc,SAJb;AAKE,QAAA,QAAQ,EAAE,MAAMf,KAAK,CAACG,MAAN,CAAaG,aAAb,CAA2B,KAA3B,CALlB;AAME,QAAA,OAAO,EAAE,MAAMN,KAAK,CAACG,MAAN,CAAaG,aAAb,CAA2B,KAA3B,CANjB;AAOE,QAAA,KAAK,EAAEd;AAPT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA/CD;;KAAMO,Y;AAiDN,qBAAeR,OAAO,CAACQ,YAAD,CAAtB","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { connect } from \"formik\";\n\nconst buttonStyle = {\n  color: \"gold\",\n  fundingicons: false,\n  label: \"checkout\",\n  shape: \"rect\",\n  size: \"responsive\",\n  tagline: false,\n};\n\nconst PaypalButton = (props) => {\n  const createOrderOrBillingAgreement = async () => {\n    await sleepUntilSubmitted();\n    props.formik.submitForm(); // submit will call api with form values and inject _paypal_token into the form values\n    if (props.formik.isValid) {\n      props.formik.setSubmitting(true);\n    }\n    return props.formik.values._paypal_token;\n  };\n\n  const sleepUntilSubmitted = async () => {\n    const sleep = async (ms) =>\n      new Promise((resolve) => {\n        setTimeout(resolve, ms);\n      });\n\n    while (props.formik.isSubmitting) {\n      await sleep(100);\n    }\n  };\n\n  const onApprove = () => {\n    // do something on success\n    console.log(\"on submite form\");\n  };\n\n  const paypal = window[\"paypal\"];\n  if (!paypal) return null;\n\n  const Button = paypal.Buttons.driver(\"react\", { React, ReactDOM });\n  const { isSubmitting } = props.formik;\n\n  return (\n    <div>\n      <div style={(isSubmitting && { display: \"none\" }) || {}}>\n        <Button\n          commit\n          env=\"sandbox\"\n          createBillingAgreement={createOrderOrBillingAgreement}\n          onApprove={onApprove}\n          onCancel={() => props.formik.setSubmitting(false)}\n          onError={() => props.formik.setSubmitting(false)}\n          style={buttonStyle}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default connect(PaypalButton);\n"]},"metadata":{},"sourceType":"module"}
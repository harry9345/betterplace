{"ast":null,"code":"var _jsxFileName = \"/Users/mona/Desktop/Projects/React/userCode/betterplace-fe-test/src/PaypalButton.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { connect } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst buttonStyle = {\n  color: \"gold\",\n  fundingicons: false,\n  label: \"checkout\",\n  shape: \"rect\",\n  size: \"responsive\",\n  tagline: false\n};\n\nclass PaypalButton extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.createOrderOrBillingAgreement = async () => {\n      this.props.formik.submitForm(); // submit will call api with form values and inject _paypal_token into the form values\n\n      await this.sleepUntilSubmitted();\n      if (this.props.formik.isValid) this.props.formik.setSubmitting(true);\n      return this.props.formik.values._paypal_token;\n    };\n\n    this.sleepUntilSubmitted = async () => {\n      const sleep = async ms => new Promise(resolve => setTimeout(resolve, ms));\n\n      while (this.props.formik.isSubmitting) {\n        await sleep(100);\n      }\n    };\n\n    this.onApprove = () => {// do something on success\n    };\n\n    this.render = () => {\n      const paypal = window[\"paypal\"];\n      if (!paypal) return null;\n      const Button = paypal.Buttons.driver(\"react\", {\n        React,\n        ReactDOM\n      });\n      const {\n        isSubmitting\n      } = this.props.formik;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: isSubmitting && {\n            display: \"none\"\n          } || {},\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            commit: true,\n            env: \"sandbox\",\n            createBillingAgreement: this.createOrderOrBillingAgreement,\n            onApprove: this.onApprove,\n            onCancel: () => this.props.formik.setSubmitting(false),\n            onError: () => this.props.formik.setSubmitting(false),\n            style: buttonStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this);\n    };\n  }\n\n}\n\nexport default _c = connect(PaypalButton);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/mona/Desktop/Projects/React/userCode/betterplace-fe-test/src/PaypalButton.js"],"names":["React","ReactDOM","connect","buttonStyle","color","fundingicons","label","shape","size","tagline","PaypalButton","Component","createOrderOrBillingAgreement","props","formik","submitForm","sleepUntilSubmitted","isValid","setSubmitting","values","_paypal_token","sleep","ms","Promise","resolve","setTimeout","isSubmitting","onApprove","render","paypal","window","Button","Buttons","driver","display"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,OAAT,QAAwB,QAAxB;;AAEA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,KAAK,EAAE,MADW;AAElBC,EAAAA,YAAY,EAAE,KAFI;AAGlBC,EAAAA,KAAK,EAAE,UAHW;AAIlBC,EAAAA,KAAK,EAAE,MAJW;AAKlBC,EAAAA,IAAI,EAAE,YALY;AAMlBC,EAAAA,OAAO,EAAE;AANS,CAApB;;AASA,MAAMC,YAAN,SAA2BV,KAAK,CAACW,SAAjC,CAA2C;AAAA;AAAA;;AAAA,SACzCC,6BADyC,GACT,YAAY;AAC1C,WAAKC,KAAL,CAAWC,MAAX,CAAkBC,UAAlB,GAD0C,CACV;;AAChC,YAAM,KAAKC,mBAAL,EAAN;AACA,UAAI,KAAKH,KAAL,CAAWC,MAAX,CAAkBG,OAAtB,EAA+B,KAAKJ,KAAL,CAAWC,MAAX,CAAkBI,aAAlB,CAAgC,IAAhC;AAC/B,aAAO,KAAKL,KAAL,CAAWC,MAAX,CAAkBK,MAAlB,CAAyBC,aAAhC;AACD,KANwC;;AAAA,SAQzCJ,mBARyC,GAQnB,YAAY;AAChC,YAAMK,KAAK,GAAG,MAAMC,EAAN,IAAY,IAAIC,OAAJ,CAAYC,OAAO,IAAIC,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAjC,CAA1B;;AACA,aAAO,KAAKT,KAAL,CAAWC,MAAX,CAAkBY,YAAzB,EAAuC;AACrC,cAAML,KAAK,CAAC,GAAD,CAAX;AACD;AACF,KAbwC;;AAAA,SAezCM,SAfyC,GAe7B,MAAM,CAChB;AACD,KAjBwC;;AAAA,SAmBzCC,MAnByC,GAmBhC,MAAM;AACb,YAAMC,MAAM,GAAGC,MAAM,CAAC,QAAD,CAArB;AACA,UAAI,CAACD,MAAL,EAAa,OAAO,IAAP;AAEb,YAAME,MAAM,GAAGF,MAAM,CAACG,OAAP,CAAeC,MAAf,CAAsB,OAAtB,EAA+B;AAAEjC,QAAAA,KAAF;AAASC,QAAAA;AAAT,OAA/B,CAAf;AACA,YAAM;AAAEyB,QAAAA;AAAF,UAAmB,KAAKb,KAAL,CAAWC,MAApC;AAEA,0BACE;AAAA,+BACE;AAAK,UAAA,KAAK,EAAGY,YAAY,IAAI;AAAEQ,YAAAA,OAAO,EAAE;AAAX,WAAjB,IAAyC,EAArD;AAAA,iCACE,QAAC,MAAD;AACE,YAAA,MAAM,MADR;AAEE,YAAA,GAAG,EAAC,SAFN;AAGE,YAAA,sBAAsB,EAAE,KAAKtB,6BAH/B;AAIE,YAAA,SAAS,EAAE,KAAKe,SAJlB;AAKE,YAAA,QAAQ,EAAE,MAAM,KAAKd,KAAL,CAAWC,MAAX,CAAkBI,aAAlB,CAAgC,KAAhC,CALlB;AAME,YAAA,OAAO,EAAE,MAAM,KAAKL,KAAL,CAAWC,MAAX,CAAkBI,aAAlB,CAAgC,KAAhC,CANjB;AAOE,YAAA,KAAK,EAAEf;AAPT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAeD,KAzCwC;AAAA;;AAAA;;AA4C3C,oBAAeD,OAAO,CAACQ,YAAD,CAAtB","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { connect } from \"formik\";\n\nconst buttonStyle = {\n  color: \"gold\",\n  fundingicons: false,\n  label: \"checkout\",\n  shape: \"rect\",\n  size: \"responsive\",\n  tagline: false,\n};\n\nclass PaypalButton extends React.Component {\n  createOrderOrBillingAgreement = async () => {\n    this.props.formik.submitForm(); // submit will call api with form values and inject _paypal_token into the form values\n    await this.sleepUntilSubmitted();\n    if (this.props.formik.isValid) this.props.formik.setSubmitting(true);\n    return this.props.formik.values._paypal_token;\n  };\n\n  sleepUntilSubmitted = async () => {\n    const sleep = async ms => new Promise(resolve => setTimeout(resolve, ms));\n    while (this.props.formik.isSubmitting) {\n      await sleep(100);\n    }\n  };\n\n  onApprove = () => {\n    // do something on success\n  };\n\n  render = () => {\n    const paypal = window[\"paypal\"];\n    if (!paypal) return null;\n\n    const Button = paypal.Buttons.driver(\"react\", { React, ReactDOM });\n    const { isSubmitting } = this.props.formik;\n\n    return (\n      <div>\n        <div style={(isSubmitting && { display: \"none\" }) || {}}>\n          <Button\n            commit\n            env=\"sandbox\"\n            createBillingAgreement={this.createOrderOrBillingAgreement}\n            onApprove={this.onApprove}\n            onCancel={() => this.props.formik.setSubmitting(false)}\n            onError={() => this.props.formik.setSubmitting(false)}\n            style={buttonStyle}\n          />\n        </div>\n      </div>\n    );\n  };\n}\n\nexport default connect(PaypalButton);\n"]},"metadata":{},"sourceType":"module"}